With a list of Accounts "in" the SocialMedia class.
ArrayList? as needs to be dynamic.

MiniSocialMediaPlatform interface:
int createAccount(String handle) throws IllegalHandleException, InvalidHandleException;:
Validate handle then...
Create new instance of account with the Account(String handle) constructor and add it to the list of accounts.
"""
//Checking for InvalidHandleException
if(handle.length() > system_limit_of_character OR handle.isEmpty()){  //Unsure what this system_limit_of_characters is from documentation.
    throw new InvalidHandleException;
}
//Checking for IllegalHandleException
for(Account a : AccountList){
    if(a.getHandle().equals(handle)){
        throw new IllegalHandleException;
    }
}
AccountsList.add(new Account(handle));
"""


void removeAccount(int id) throws AccountIDNotRecognisedException;
Iterate over accounts list and if account id not found throw exception. Posts and likes must also be removed - This depends on how the posts are implemented. e.g. if posts for each user are only associated with the account then a simple .romem
"""
boolean accountFound = false;
for(int i = 0;i<AccountsList.size(); i++){
    if(accountList[i].getId().equals(id)){
        accountFound = true;
        AccountsList.remove(i);   //or store this i as a variable outside for loop as "Note: It is not recommended to use ArrayList.remove() when iterating over elements. " - https://www.geeksforgeeks.org/remove-element-arraylist-java/
        break;
    }
}
if(!accountFound){
    throw new AccountIDNotRecognisedException();
}
"""
void changeAccountHandle(String oldHandle, String newHandle) throws HandleNotRecognisedException, IllegalHandleException, InvalidHandleException;
Iterate over accountsList to find oldHandle, if not found throw exception. otherwise change it.
================================================== IMPORTANT (i think) ===========================================
There should be a static method in the account class to validate for InvalidHandleException, IllegalHandleException.
e.g.
public static void ValidateForIllegalHandle(String handle, ArrayList<Account> accountsList) throws IllegalHandleException{
    for(Account a : AccountList){
        if(a.getHandle().equals(Handle)){
            throw new IllegalHandleException;
        }
    }
}
public static void ValidateForInvalidHandle(String handle) throws InvalidHandleException {
    if(handle.length() > system_limit_of_character OR !handle.isEmpty()){
        throw new IllegalHandleException();
    }
}
========================================================================================================
"""
--------------------------------------------------------------------------------------------------------------------------------------------------------------
if(newHandle.length() > system_limit_of_character OR !newHandle.isEmpty() OR oldHandle.length() > system_limit_of_character OR !oldHandle.isEmpty()){
    throw new InvalidHandleException();
}
//Checking for IllegalHandleException
for(Account a : AccountList){
    if(a.getHandle().equals(newHandle)){
        throw new IllegalHandleException;
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------
The above could be replaced by:
Account.ValidateForInvalidHandle(oldHandle);
Account.ValidateForInvalidHandle(newHandle);
Account.ValidateForIllegalHandle(newHandle);

boolean accountFound = false;
for(Account a : accountsList){
    if(a.getHandle().equals(oldHandle)){
        accountFound = true;
        a.setHandle(newHandle);
        break;
    }
}
if(!accountFound){
    throw new HandleNotRecognisedException();
}
"""
-------------------------------------------------------------------------------------------
Static method in Account class for HandleNotRecognisedException;
public static int ValidateHandleNotRecognisedException(String handle, ArrayList<Account> accountList) throws HandleNotRecognisedException{
    int accountAtIndex = -1;
    for(int i =0;i<accountList.size();i++){
        if(accountList[i].getHandle().equals(handle)){
            accountAtIndex = i;
            break;
        }
    }
    if(accountAtIndex.equals(-1)){
        throw new HandleNotRecognisedException();
    }
    else{
        return accountAtIndex;
    }
} 
-------------------------------------------------------------------------------------------
if posts are "stored" within the Account instance. - implement like a linked list? - If a comment can only have 1 "child" Post.
String showAccount(String handle) throws HandleNotRecognisedException;
Account account = accountsList[Account.ValidateHandleNotRecognisedException(handle, accountList)];



int createPost(String handle, String message) throws HandleNotRecognisedException, InvalidPostException;

int endorsePost(String handle, int id) throws HandleNotRecognisedException, PostIDNotRecognisedException, NotActionablePostException;

int commentPost(String handle, int id, String message) throws HandleNotRecognisedException, PostIDNotRecognisedException, NotActionablePostException, InvalidPostException;

void deletePost(int id) throws PostIDNotRecognisedException;

String showIndividualPost(int id) throws PostIDNotRecognisedException;

StringBuilder showPostChildrenDetails(int id) throws PostIDNotRecognisedException, NotActionablePostException;

int getMostEndorsedPost();

int getMostEndorsedAccount();

void erasePlatform();

void savePlatform(String filename) throws IOException;

void loadPlatform(String filename) throws IOException, ClassNotFoundException;

SocialMediaPlatform interface:
